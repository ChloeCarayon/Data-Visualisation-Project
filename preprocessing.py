# -*- coding: utf-8 -*-
"""Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cR3FVWbJFotLjCco-jDWbFl8ha_ZnnCu

---
Authors : Chloé CARAYON - Victor TAILLIEU        
Date : 24/03/2021

# DASHBOARD PROJECT
---
"""

import pandas as pd
from tqdm import tqdm
import re

import nltk
from nltk.corpus import stopwords
from nltk.stem import WordNetLemmatizer
from nltk import word_tokenize
nltk.download("stopwords")
nltk.download('punkt')

from google.colab import drive
drive.mount('/content/drive')

"""## Load data"""

df = pd.read_csv("/content/drive/MyDrive/Data_visualisation/scrubbed.csv")

df

"""## Preprocessing"""

df.columns

"""### Columns cleaning"""

df.rename(columns={'shape': 'form',
                   "duration (seconds)": "duration",
                   "date posted": "date_posted",
                   "longitude ": "longitude"}, inplace=True)
df.drop("duration (hours/min)", axis=1, inplace=True)

"""### Handle missing values"""

df.isnull().sum()

df.country.fillna(df.country.mode()[0], inplace=True)
df.state.fillna(df.state.mode()[0], inplace=True)
df.form.fillna("unknown", inplace=True)
df.comments.fillna("", inplace=True)

"""changer mode en se basant sur coordonnées 

https://stackoverflow.com/questions/20169467/how-to-convert-from-longitude-and-latitude-to-country-or-city
"""

print("Number of missing values:", df.isnull().sum().sum())

"""### Text preprocessing"""

df['comments'].values

def preprocessing(text): 
    words = word_tokenize(text) 
    words = [word for word in words if word not in stopwords.words("english")]
    words = [word for word in words if word.isalpha()]
    return ' '.join(words)

tqdm.pandas()

df['comments'] = df['comments'].progress_map(preprocessing)

df['comments'].values

"""### Numbers preprocessing"""

df

df.dtypes

def clean_number(text):
    replacements = {
        r"`": "",
        r"q": ""
    }
    
    for exp in replacements:
        text = re.sub(exp, replacements[exp], str(text))
    
    return pd.to_numeric(text)

df["duration"] = df.duration.progress_map(clean_number)
df["latitude"] = df.latitude.progress_map(clean_number)

"""### Dates preprocessing"""

df

def clean_datetime(text):
    replacements = {
        r"24:": "00:",
    }
    
    for exp in replacements:
        text = re.sub(exp, replacements[exp], str(text))
    
    return pd.to_datetime(text, format='%m/%d/%Y %H:%M')

df.datetime = df.datetime.progress_map(clean_datetime)
df.date_posted = pd.to_datetime(df.date_posted, format='%m/%d/%Y')

df

df.to_csv('/content/drive/MyDrive/Data_visualisation/ufo.csv', index=False)